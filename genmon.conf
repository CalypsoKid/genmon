[GenMon]

# name of the site, used in the web interface and email output (required)
sitename = SiteName

# the serial device name of your serial port. Normally  /dev/serial0 or
# /dev/ttyAMA0 for onboard Raspberry Pi Serial ports (required)
port = /dev/serial0

# the name of the folder in the mailbox for searching for incoming email
# commands (required)
incoming_mail_folder = Generator

# once an email command has been processed by genmon.py the email is moved to
# this mailbox folder (required)
processed_mail_folder = Generator/Processed

# The TCP port used for communicating with the other apps like ClientInterface.py
# and the web interface (required)
server_port = 9082

# the Modbus slave address. This *should* not need to be changed from 9d (required)
address = 9d

# location of log files (required)
loglocation = /var/log/

# location of the text file containing descriptions of alarm codes (required)
# the default location is in the same directory as genmon.py
alarmfile = /home/pi/genmon/ALARMS.txt

# enable genmon.py to output to the console if True. If this is false the other
# display* commands below are ignored (optional, default False)
displayoutput = False

# display information about genmon.py to the console (optional, default False)
displaymonitor = False

# display controller register contents to the console (optional, default False)
displayregisters = False

# display generator status to the console (optional, default False)
displaystatus = False

# display maintenance information to the console (optional, default False)
displaymaintenance = False

# enable enable code to support reverse engineering of registers. This option,
# when True creates a thread that will monitor registers in the controller and
# send notifications of changed registers. Not used in normal operation (optional,
# default False)
enabledebug = False

# This option will display the contents of additional registers that appear to be
# associated with sensors of some type, for example one register outputs almost
# half of the frequency. I assume this is used internally by the controller.
# (optional, default False)
displayunknown = False

# (optional) This option enables (when True) using and alternate method for writing
# the exercise time. Some version of the Evolution firmware only support the legacy
# method of writing the exercise time. The legacy method is a bit more convoluted
# and the current implementation may result in the exercise time being off by one
# or two minutes from the request set value. (optional, default False).  Note
# this option is forced True if a Nexus controller is detected or selected.
# (e.g. use legacy exercise write if using a Nexus controller). When using this
# method the exercise time must be at least three minutes or more from the current
# generator time.
#uselegacysetexercise = False

# (optional) Disable the monitoring of the utility line voltage for detecting 
# power outages. This will disable the sending of emails when a power outage is 
# detected. If you have a Transfer Switch that monitors the utility line and starts 
# your generator you may need to set this to true. Most transfer switches requires 
# the generator controller to monitor the utility line voltage and notify the switch
# to activate so in most cases this will not be needed. If you software is reading 
# zero volts for the utility voltage and you are getting false emails regarding an
# outage then enable this setting.
#disableoutagecheck = False

# (optional) True if monitoring a liquid cooled generator, False if air cooled. 
# This option is for monitoring active relays in the controller, which are different 
# for liquid vs air cooled generators. The software will auto-detect the type of 
# generator cooling
#liquidcooled = True

# (optional). The software will auto-detect the controller type. The auto-detect
# can be overridden with this setting. True for Evolution controller, False for
# Nexus Controller.
#evolutioncontroller = True

# (optional) default True. This parameter is only valid for liquid cooled
# Evolution generators, ignored for others. True if your generator uses diesel
# or gasoline, false if you use  propane or natural gas. This value is used
# to change how some register values are interpreted and displayed based on
# the fuel type
#petroleumfuel = True

# (optional). This parameter will specify the full path of a file that will log
# power outages. An outage is defined by the utility voltage dropping below the
# generator's programmed threshold voltage. Typically the generator has a hold
# off period (usually around 5 seconds) before the generator starts. If utility
# power is rises above the threshold voltage before the hold off timer has
# expired the generator will  not start, but the outage will still be logged.
# If this parameter is not enabled (i.e. commented out) then the outage logging
# will not function. To reset the outage log manually delete this file.
# (e.g. "sudo rm /home/pi/genmon/outage.txt" )
outagelog = /home/pi/genmon/outage.txt

# (optional) This parameter will sync the generator time to the system time
# if there is a change in Daylight Savings Time. This does not change the system
# time, only the generator time.
#syncdst = True

# (optional) This parameter will sync the generator time to the system time
# once every hour. This does not change the system time, only the generator
# time.
#synctime = True

# (optional) This parameter will enable the functionality to support biweekly
# and monthly exercise times (weekly is the default). Note, your generator
# controller  must support this functionality before enabling this option.
#enhancedexercise = True

# (Optional) This parameter, if true will enable the use of HTTPS 
# (secure HTTP) in the Flask web app. This option is only applicable to the 
# web app. This option requires python-openssl library to be installed
#usehttps = True

# (Optional) This parameter is used with usehttps. If 
# userhttps is true, then this option will signal the type of certificate 
# to use. If this option is true  a self signed certificate (supplied by 
# Flask library) will be used. If false, then the a key file (key.pem) and 
# a certificate file (cert.pem) must be created and specified in the 
# following entries (keyfile, certfile) below.
# For information on how to create your own 
# certificate please see this site: 
#     https://workaround.org/ispmail/jessie/create-certificate 
#useselfsignedcert = True

# (Optional) These parameters are used if useselfsignedcert is False. They 
# specify the path and name of the key file and certificate file.
#keyfile = /home/pi/genmon/key.pem
#certfile = /home/pi/genmon/cert.pem

# (Optional) This parameter will allow a simple authentication to be used
# and it sets the username of the simple authentication. usehttps must
# be True to use this feature.
# This option is only applicable to the web app.
http_user = admin

# (Optional) This parameter will allow a simple authentication to be used
# and it sets the password of the simple authentication. usehttps must
# be True to use this feature.
# This option is only applicable to the web app.
http_pass = password

